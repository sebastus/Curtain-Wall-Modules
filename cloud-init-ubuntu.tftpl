# cloud-config
package_update: true
packages:
 - git
 - jq
 - curl
 - unzip 
 - apt-transport-https 
 - gnupg 
 - software-properties-common 
 - lsb-release 
 - gnupg 
 - ca-certificates
runcmd:
 - export DEBIAN_FRONTEND=noninteractive

 # python 3.8
 - apt-get install python3.8 python3.8-dev python3.8-venv python3-pip -y
 - update-alternatives --install /usr/bin/python python /usr/bin/python3.8 1 
 - update-alternatives --install /usr/bin/python3 python3 /usr/bin/python3.8 1 
 - update-alternatives --install /usr/bin/pip pip /usr/bin/pip3 1
 - python3.8 -m pip install pip --upgrade 

 # python 3.7 - supports running Checkov in pipelines
 - add-apt-repository ppa:deadsnakes/ppa -y
 - apt-get update
 - apt-get install python3.7 python3.7-dev python3.7-venv -y

 # solve problem with missing module apt_pkg - caused by switching from python 3.6 to 3.8 somehow
 - apt-get remove python3-apt -y
 - apt-get install python3-apt -y

# terraform - downloading zip because apt repo seems to be out of sync - failing to install
 - wget https://releases.hashicorp.com/terraform/${terraform_version}/terraform_${terraform_version}_linux_amd64.zip
 - unzip -u terraform_${terraform_version}_linux_amd64.zip -d /usr/bin

# docker
 - curl -sSL https://get.docker.com/ | sh
 - usermod -aG docker ${user}

 # az cli
 - curl -sL https://packages.microsoft.com/keys/microsoft.asc | gpg --dearmor | tee /etc/apt/trusted.gpg.d/microsoft.gpg > /dev/null
 - AZ_REPO=$(lsb_release -cs)
 - echo "deb [arch=amd64] https://packages.microsoft.com/repos/azure-cli/ $AZ_REPO main" | tee /etc/apt/sources.list.d/azure-cli.list
 - chmod 644 /etc/apt/trusted.gpg.d/microsoft.gpg
 - apt-get update
 - apt-get install azure-cli

 # build agent
 - mkdir /build
 - wget -O /build/buildagent.tar.gz "https://vstsagentpackage.azureedge.net/agent/${azdo_agent_version}/vsts-agent-linux-x64-${azdo_agent_version}.tar.gz"
 - mkdir -p /build/myagent && cd /build/myagent
 - tar zxvf /build/buildagent.tar.gz
 - chown -R ${user}:${user} /build/myagent
 - echo InfrastructureInstaller=True >> .env
 - echo ${hub_environment}=True >> .env
 - echo "Running the installation command"
 - sudo -u ${user} env /build/myagent/config.sh --unattended --url ${azdo_org} --auth pat --token ${pat_token} --acceptTeeEula --pool ${build_pool} --agent ${agent_name} --replace
 - /build/myagent/svc.sh install
 - /build/myagent/svc.sh start
