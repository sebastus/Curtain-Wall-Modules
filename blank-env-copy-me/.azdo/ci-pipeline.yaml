trigger:
- main

pool:
  vmImage: ubuntu-latest

variables:
  - group: mycurtainwall__vars

steps:

- bash: |
    git config --global url."https://pat:$AZDO_PERSONAL_ACCESS_TOKEN@dev.azure.com/golive".insteadOf "https://dev.azure.com/golive"
    git config --list
  displayName: Add auth to git config  
  env: 
    AZDO_PERSONAL_ACCESS_TOKEN: $(AZDO-PAT)

- script: |
    terraform init -backend-config="storage_account_name=$ARM_STATE_STORAGE_NAME" -backend-config="container_name=$ARM_STATE_CONTAINER_NAME" -backend-config="key=$ARM_STATE_STORAGE_KEY" -backend-config="resource_group_name=$ARM_STATE_RG_NAME"
  displayName: 'tf init'
  env:
    ARM_CLIENT_ID: $(ARM-CLIENT-ID)
    ARM_CLIENT_SECRET: $(ARM-CLIENT-SECRET)
    ARM_TENANT_ID: $(ARM-TENANT-ID)
    ARM_SUBSCRIPTION_ID: $(ARM-SUBSCRIPTION-ID)
    ARM_STATE_RG_NAME: $(ARM-STATE-RG-NAME)
    ARM_STATE_STORAGE_NAME: $(ARM-STATE-STORAGE-NAME)
    ARM_STATE_CONTAINER_NAME: $(ARM-STATE-CONTAINER-NAME)
    ARM_STATE_STORAGE_KEY: $(ARM-STATE-STORAGE-KEY)

- script: |
    terraform plan -input=false -out my.tfplan -var-file=dev.tfvars
  displayName: 'tf plan'
  env:
    ARM_CLIENT_ID: $(ARM-CLIENT-ID)
    ARM_CLIENT_SECRET: $(ARM-CLIENT-SECRET)
    ARM_TENANT_ID: $(ARM-TENANT-ID)
    ARM_SUBSCRIPTION_ID: $(ARM-SUBSCRIPTION-ID)
    TF_VAR_azdo_pat: $(AZDO-PAT)

- script: |
    terraform apply my.tfplan
  displayName: 'tf apply'
  condition: eq(variables['Build.SourceBranch'], 'refs/heads/main')
  env:
    ARM_CLIENT_ID: $(ARM-CLIENT-ID)
    ARM_CLIENT_SECRET: $(ARM-CLIENT-SECRET)
    ARM_TENANT_ID: $(ARM-TENANT-ID)
    ARM_SUBSCRIPTION_ID: $(ARM-SUBSCRIPTION-ID)
